#include<stdio.h>

char Maze[11][11] = { {'.', '-', '.', '-', '.', '-', '.', '-', '.', '-', '.'},
{'|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|'},
{'.', ' ', '.', ' ', '.', '-', '.', '-', '.', ' ', '.'},
{'|', ' ', '|', ' ', '|', ' ', ' ', ' ', '|', ' ', '|'},
{'.', ' ', '.', ' ', '.', '-', '.', ' ', '.', ' ', '.'},
{'|', ' ', '|', ' ', ' ', ' ', '|', ' ', ' ', ' ', '|'},
{'.', ' ', '.', ' ', '.', '-', '.', '-', '.', ' ', '.'},
{'|', ' ', '|', ' ', '|', ' ', ' ', ' ', '|', ' ', '|'},
{'.', ' ', '.', '_', '.', ' ', '.', ' ', '.', ' ', '.'},
{'|', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', '|'},
{'.', '-', '.', '-', '.', '-', '.', '-', '.', '-', '.'} };

char FFA[11][11] = { {'.', '-', '.', '-', '.', '-', '.', '-', '.', '-', '.'},
{'|', 'e', ' ', 'd', ' ', 'c', ' ', 'd', ' ', 'e', '|'},
{'.', ' ', '.', ' ', '.', ' ', '.', ' ', '.', ' ', '.'},
{'|', 'd', ' ', 'c', ' ', 'b', ' ', 'c', ' ', 'd', '|'},
{'.', ' ', '.', ' ', '.', ' ', '.', ' ', '.', ' ', '.'},
{'|', 'c', ' ', 'b', ' ', 'a', ' ', 'b', ' ', 'c', '|'},
{'.', ' ', '.', ' ', '.', ' ', '.', ' ', '.', ' ', '.'},
{'|', 'd', ' ', 'c', ' ', 'b', ' ', 'c', ' ', 'd', '|'},
{'.', ' ', '.', ' ', '.', ' ', '.', ' ', '.', ' ', '.'},
{'|', 'e', ' ', 'd', ' ', 'c', ' ', 'd', ' ', 'e', '|'},
{'.', '-', '.', '-', '.', '-', '.', '-', '.', '-', '.'} };


//=====Declarations & Inital values=====

	
int x = 0;
int y = 0;
int i=0;

//=====Print Maze Function=====
void PrintMaze()
{
//=====Print-out the maze=====
x = 0;
y = 0;
while(x < 11)
{
printf("%c",Maze[y][x]);
printf(" ");
x++;
if(x > 10)
{
printf("\n");
y++;
x = 0;

if(y > 10)
{
x = 11;
}
}
}
printf("\n");
printf("\n");
}
//=====Print FFA Function=====
void PrintFFA()
{
//=====Print-out the FFA=====
x = 0;
y = 0;

while((x < 11) && (i < 33))
{
printf("%c",FFA[y][x]);
printf(" ");
x++;
if(x > 10)
{
printf("\n");
y++;
x = 0;
if(y > 10)
{
x = 11;
}
}
}
printf("\n");
printf("\n");
}

int main()
{
	PrintMaze();
	PrintFFA();
	return 0;
}
